# Version 2.9.0 Changelog

## Release Date: October 14, 2025

## ðŸš€ Major New Feature: MCP Integration

### What's New

**Model Context Protocol (MCP) Support**
- Added full MCP server implementation for AI assistant integration
- AI assistants like Claude can now directly search WordPress content
- Expose hybrid search functionality via standardized MCP protocol
- Zero impact on existing WordPress plugin functionality

### New Files Added

1. **mcp_server.py** - Main MCP server implementation
   - 6 tools exposed to AI assistants
   - Async request handling
   - Comprehensive error handling
   - Service initialization and management

2. **test_mcp_client.py** - Test client with examples
   - Basic search tests
   - AI answer generation tests
   - Query expansion tests
   - Interactive search mode
   - Indexing tests

3. **mcp_config.json** - Claude Desktop configuration template
   - Pre-configured for easy setup
   - Environment variable management
   - Ready to use with Claude Desktop

4. **Documentation Files:**
   - `MCP_README.md` - Quick overview and getting started
   - `MCP_QUICKSTART.md` - 5-minute setup guide
   - `MCP_INTEGRATION_GUIDE.md` - Complete integration documentation
   - `MCP_ARCHITECTURE.md` - Technical architecture details
   - `env.mcp.example` - Environment configuration reference

5. **Helper Scripts:**
   - `scripts/run_mcp_server.sh` - Start MCP server with checks
   - `scripts/test_mcp_setup.sh` - Verify installation and setup

### MCP Tools Available

1. **search_wordpress_content**
   - Hybrid search with AI reranking
   - Configurable result limits
   - Adjustable AI weighting

2. **search_with_answer**
   - Search + AI-generated answer
   - Uses Cerebras LLM for synthesis
   - Custom instruction support

3. **get_search_stats**
   - Index statistics
   - System information
   - Health metrics

4. **index_wordpress_content**
   - Full content indexing
   - Selective post type indexing
   - Force reindex option

5. **get_document_by_id**
   - Retrieve specific documents
   - Direct document access

6. **expand_query**
   - AI-powered query expansion
   - Related terms generation
   - Query improvement

### Technical Improvements

**MCP Server Features:**
- stdio-based communication (standard MCP protocol)
- Shared core components with FastAPI service
- Same search quality and performance
- Async/await support throughout
- Comprehensive logging
- Graceful error handling

**Integration Benefits:**
- No modification to existing code
- Reuses all existing search infrastructure
- Shared Qdrant, LlamaIndex, and Cerebras components
- Consistent results across HTTP and MCP interfaces
- Can run both services simultaneously

### Dependencies Updated

**New Dependencies:**
- `mcp==0.9.0` - Model Context Protocol SDK

**Updated:**
- `requirements.txt` - Added MCP support

### Use Cases

1. **AI-Powered Content Discovery**
   - Ask Claude to search your WordPress content
   - Natural language queries
   - Intelligent result presentation

2. **Automated Content Management**
   - AI-assisted indexing
   - Smart content analysis
   - Automated categorization

3. **Enhanced Q&A**
   - Ask questions about your content
   - Get AI-synthesized answers
   - Source citation included

4. **Developer Productivity**
   - Query content during development
   - Test search functionality
   - Debug search results

### Setup Instructions

1. Install MCP SDK:
   ```bash
   pip install mcp
   ```

2. Configure Claude Desktop:
   - Copy `mcp_config.json` contents
   - Add to `claude_desktop_config.json`
   - Set environment variables

3. Test installation:
   ```bash
   python test_mcp_client.py
   ```

4. Start using:
   - Open Claude Desktop
   - Ask it to search your content
   - Enjoy AI-powered search!

### Architecture

```
Claude Desktop (MCP Client)
         â†“
    MCP Server (mcp_server.py)
         â†“
  Hybrid Search System (shared)
         â†“
  Qdrant + Cerebras + LlamaIndex + WordPress
```

### Compatibility

- âœ… Compatible with all existing WordPress plugin features
- âœ… Works alongside FastAPI HTTP service
- âœ… No breaking changes to current functionality
- âœ… Backward compatible with version 2.8.x

### Performance

- Search latency: 200-500ms (same as HTTP API)
- Cold start: 2-5 seconds (service initialization)
- Concurrent requests: Sequential via stdio
- Memory: Shared with core services

### Security

- Environment-based configuration
- No network exposure (stdio only)
- Secure API key management
- Local execution

### Testing

Comprehensive test suite included:
- Basic search functionality
- AI answer generation
- Query expansion
- Indexing operations
- Error handling
- Interactive mode

### Documentation

Complete documentation suite:
- Quick start guide (5 minutes)
- Full integration guide (detailed setup)
- Architecture overview (technical deep dive)
- Example configurations
- Troubleshooting guide

### Future Enhancements Planned

- HTTP bridge for MCP (remote access)
- Enhanced analytics integration
- Multi-site support
- Advanced caching
- Additional AI tools

---

## Upgrade Instructions

### From 2.8.x to 2.9.0

**For WordPress Plugin Users:**
- No changes needed
- Plugin works exactly as before
- Update will be seamless

**For MCP Integration (Optional):**
1. Update Python dependencies:
   ```bash
   pip install -r requirements.txt
   ```

2. Follow MCP_QUICKSTART.md for setup

3. Test with test_mcp_client.py

**Rollback:**
- If needed, revert to 2.8.7
- MCP files can be safely ignored
- No database changes made

---

## Version Information

- **Previous Version:** 2.8.7
- **Current Version:** 2.9.0
- **Release Type:** Feature Release
- **Breaking Changes:** None
- **Migration Required:** No

---

## Credits

MCP Integration developed to leverage Anthropic's Model Context Protocol for enhanced AI assistant integration.

## Support

- Documentation: See MCP_*.md files
- Issues: Report via standard channels
- Questions: Check MCP_INTEGRATION_GUIDE.md

---

**Important Note:** This is a feature-additive release. All existing functionality remains unchanged. MCP integration is completely optional and doesn't affect the WordPress plugin or FastAPI service if not used.

